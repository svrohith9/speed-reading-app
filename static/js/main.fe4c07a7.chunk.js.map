{"version":3,"sources":["Components/DisplayComponent.js","Components/BtnComponent.js","Components/CustomData.js","App.js","index.js"],"names":["DisplayComponent","props","data","BtnComponent","status","className","onClick","start","stop","reset","resume","customData","App","wordsArray","split","index","useState","word","setWord","interv","setInterv","setStatus","value","setValue","run","setInterval","length","clearInterval","Typography","id","gutterBottom","Grid","container","spacing","alignItems","item","xs","Slider","onChange","event","newValue","aria-labelledby","Input","margin","target","Number","onBlur","inputProps","step","min","max","type","ReactDOM","render","document","getElementById"],"mappings":"oMAWeA,MATf,SAA0BC,GAExB,OACE,8BACE,+BAAOA,EAAMC,UCmDJC,MAvDf,SAAsBF,GACpB,OACE,gCACoB,IAAjBA,EAAMG,OACL,wBACEC,UAAU,oCACVC,QAASL,EAAMM,MAFjB,mBAOA,GAGgB,IAAjBN,EAAMG,OACL,gCACE,wBACEC,UAAU,oCACVC,QAASL,EAAMO,KAFjB,kBAMA,wBACEH,UAAU,oCACVC,QAASL,EAAMQ,MAFjB,sBAQF,GAGgB,IAAjBR,EAAMG,OACL,gCACE,wBACEC,UAAU,oCACVC,QAASL,EAAMS,OAFjB,oBAMA,wBACEL,UAAU,oCACVC,QAASL,EAAMQ,MAFjB,sBAQF,OCnDKE,G,MAAa,CACxBT,KACE,qrD,gCCgHWU,MAxGf,WACE,IAAIC,EAAaF,EAAWT,KAAKY,MAAM,KACnCC,EAAQ,EAFC,EAIWC,mBAAS,CAAEC,KAAMJ,EAAWE,KAJvC,mBAINE,EAJM,KAIAC,EAJA,OAKeF,qBALf,mBAKNG,EALM,KAKEC,EALF,OAMeJ,mBAAS,GANxB,mBAMNZ,EANM,KAMEiB,EANF,OAUaL,mBAAS,IAVtB,mBAUNM,EAVM,KAUCC,EAVD,KA4BPhB,EAAQ,WACZiB,IACAH,EAAU,GACVD,EAAUK,YAAYD,EAAM,GAAKF,EAAS,OAGtCE,EAAM,WACNT,GAASF,EAAWa,SACtBX,EAAQ,GAEVG,EAAQ,CAAED,KAAMJ,EAAWE,QAmB7B,OACE,qBAAKV,UAAU,eAAf,SACE,sBAAKA,UAAU,eAAf,UACE,+DAEA,sBAAKA,UAAU,aAAf,UACE,cAAC,EAAD,CAAkBH,KAAMe,EAAKA,OAC7B,cAAC,EAAD,CACEb,OAAQA,EACRM,OAbK,WACbH,KAaQE,MArBI,WACZkB,cAAcR,GACdE,EAAU,GACVE,EAAS,IACTL,EAAQ,CAAED,KAAMJ,EAAW,MAkBnBL,KA3BG,WACXmB,cAAcR,GACdE,EAAU,IA0BFd,MAAOA,OAGX,cAACqB,EAAA,EAAD,CAAYC,GAAG,eAAeC,cAAY,EAA1C,qCAGA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,SAAvC,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,IAAE,EAAb,SACE,cAACC,EAAA,EAAD,CACEf,MAAwB,kBAAVA,EAAqBA,EAAQ,EAC3CgB,SAnEe,SAACC,EAAOC,GACjCjB,EAASiB,IAmECC,kBAAgB,mBAGpB,cAACV,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CACEpB,MAAOA,EACPqB,OAAO,QACPL,SAvEc,SAACC,GACzBhB,EAAgC,KAAvBgB,EAAMK,OAAOtB,MAAe,GAAKuB,OAAON,EAAMK,OAAOtB,SAuEpDwB,OApEO,WACbxB,EAAQ,EACVC,EAAS,GACAD,EAAQ,KACjBC,EAAS,MAiEDwB,WAAY,CACVC,KAAM,EACNC,IAAK,EACLC,IAAK,IACLC,KAAM,SACN,kBAAmB,6BCnGnCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fe4c07a7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction DisplayComponent(props) {\r\n  // console.log(props.data);\r\n  return (\r\n    <div>\r\n      <span>{props.data}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayComponent;\r\n","import React from \"react\";\r\n\r\nfunction BtnComponent(props) {\r\n  return (\r\n    <div>\r\n      {props.status === 0 ? (\r\n        <button\r\n          className=\"word-count-btn word-count-btn-gre\"\r\n          onClick={props.start}\r\n        >\r\n          Start\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {props.status === 1 ? (\r\n        <div>\r\n          <button\r\n            className=\"word-count-btn word-count-btn-red\"\r\n            onClick={props.stop}\r\n          >\r\n            Stop\r\n          </button>\r\n          <button\r\n            className=\"word-count-btn word-count-btn-yel\"\r\n            onClick={props.reset}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {props.status === 2 ? (\r\n        <div>\r\n          <button\r\n            className=\"word-count-btn word-count-btn-gre\"\r\n            onClick={props.resume}\r\n          >\r\n            Resume\r\n          </button>\r\n          <button\r\n            className=\"word-count-btn word-count-btn-yel\"\r\n            onClick={props.reset}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BtnComponent;\r\n","export const customData = {\r\n  data:\r\n    \"Convincing someone to change their mind is really the process of convincing them to change their tribe. If they abandon their beliefs, they run the risk of losing social ties. You can’t expect someone to change their mind if you take away their community too. You have to give them somewhere to go. Nobody wants their worldview torn apart if loneliness is the outcome. The way to change people’s minds is to become friends with them, to integrate them into your tribe, to bring them into your circle. Now, they can change their beliefs without the risk of being abandoned socially. The British philosopher Alain de Botton suggests that we simply share meals with those who disagree with us Sitting down at a table with a group of strangers has the incomparable and odd benefit of making it a little more difficult to hate them with impunity. Prejudice and ethnic strife feed off abstraction. However, the proximity required by a meal something about handing dishes around, unfurling napkins at the same moment, even asking a stranger to pass the salt disrupts our ability to cling to the belief that the outsiders who wear unusual clothes and speak in distinctive accents deserve to be sent home or assaulted. For all the large-scale political solutions which have been proposed to salve ethnic conflict, there are few more effective ways to promote tolerance between suspicious neighbours than to force them to eat supper together. Perhaps it is not difference, but distance that breeds tribalism and hostility. As proximity increases, so does understanding. I am reminded of Abraham Lincoln's quote, I don't like that man. I must get to know him better. Facts don't change our minds. Friendship does.\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport DisplayComponent from \"./Components/DisplayComponent\";\r\nimport BtnComponent from \"./Components/BtnComponent\";\r\nimport \"./App.css\";\r\nimport { customData } from \"./Components/CustomData\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Input from \"@material-ui/core/Input\";\r\n\r\nfunction App() {\r\n  var wordsArray = customData.data.split(\" \");\r\n  var index = 0;\r\n\r\n  const [word, setWord] = useState({ word: wordsArray[index] });\r\n  const [interv, setInterv] = useState();\r\n  const [status, setStatus] = useState(0);\r\n  // Not started = 0\r\n  // started = 1\r\n  // stopped = 2\r\n  const [value, setValue] = useState(60);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value === \"\" ? \"\" : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 0) {\r\n      setValue(0);\r\n    } else if (value > 300) {\r\n      setValue(300);\r\n    }\r\n  };\r\n\r\n  const start = () => {\r\n    run();\r\n    setStatus(1);\r\n    setInterv(setInterval(run, (60 / value) * 1000));\r\n  };\r\n\r\n  const run = () => {\r\n    if (index >= wordsArray.length) {\r\n      index = 0;\r\n    }\r\n    setWord({ word: wordsArray[index++] });\r\n  };\r\n\r\n  const stop = () => {\r\n    clearInterval(interv);\r\n    setStatus(2);\r\n  };\r\n\r\n  const reset = () => {\r\n    clearInterval(interv);\r\n    setStatus(0);\r\n    setValue(60);\r\n    setWord({ word: wordsArray[0] });\r\n  };\r\n\r\n  const resume = () => {\r\n    start();\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-section\">\r\n      <div className=\"clock-holder\">\r\n        <h1>Test your Speed Reading skill</h1>\r\n\r\n        <div className=\"word-count\">\r\n          <DisplayComponent data={word.word} />\r\n          <BtnComponent\r\n            status={status}\r\n            resume={resume}\r\n            reset={reset}\r\n            stop={stop}\r\n            start={start}\r\n          />\r\n        </div>\r\n        <Typography id=\"input-slider\" gutterBottom>\r\n          Choose words per minute\r\n        </Typography>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs>\r\n            <Slider\r\n              value={typeof value === \"number\" ? value : 0}\r\n              onChange={handleSliderChange}\r\n              aria-labelledby=\"input-slider\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Input\r\n              value={value}\r\n              margin=\"dense\"\r\n              onChange={handleInputChange}\r\n              onBlur={handleBlur}\r\n              inputProps={{\r\n                step: 5,\r\n                min: 0,\r\n                max: 300,\r\n                type: \"number\",\r\n                \"aria-labelledby\": \"input-slider\",\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}